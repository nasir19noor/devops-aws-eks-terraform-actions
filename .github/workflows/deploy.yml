name: Deploy to AWS EKS

on:
  push:
    branches: [ '**' ]  # Adjust branch name as needed
    paths:
      - 'k8s/*.*' 
      - '.github/workflows/deploy.yml'
  workflow_dispatch:    # Allows manual triggering from GitHub UI

env:
  AWS_REGION: 'ap-southeast-1'  
  EKS_CLUSTER_NAME: "nasir-eks" 

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Configure AWS 
      run: |
        # Install AWS CLI if not already available
        curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \
        && unzip awscliv2.zip \
        && ./aws/install \
        && rm -rf aws awscliv2.zip
    
        # Configure AWS credentials
        mkdir -p ~/.aws
    
        # Create credentials file
        cat > ~/.aws/credentials << EOF
        [default]
        aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EOF
    
        # Create config file with region
        cat > ~/.aws/config << EOF
        [default]
        region=${{ env.AWS_REGION }}
        output=json
        EOF
    
        # Verify credentials are working (optional)
        aws sts get-caller-identity
        
    - name: Configure Kubectl 
      run: |
        sudo apt-get update 
        sudo apt-get install curl
        sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
        sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update
        sudo apt-get install -y kubectl
        
        
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
        kubectl cluster-info
        

    - name: Deploy to EKS
      run: |
        cd k8s
        kubectl apply -f configmap.yml
        
    - name: Verify deployment
      run: |
        kubectl get pods -l app=clock-app
        kubectl get svc clock-app
        kubectl get ingress clock-app-ingress